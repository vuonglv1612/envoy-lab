admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/bot" }
                route: { cluster: backend_service }
          http_filters:
          # Rate limiting check (ext_authz)
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              grpc_service:
                envoy_grpc:
                  cluster_name: rate_limiter_service
              # Forward rate limiting headers to client response AND make available to downstream filters
              allowed_headers:
                patterns:
                  - exact: "x-bot-token"
                  - exact: "x-quota-remaining"
                  - exact: "x-quota-limit"
                  - exact: "x-rate-limit"
                  - exact: "retry-after"
                  - exact: "content-type"
          # Usage tracking (ext_proc)
          - name: envoy.filters.http.ext_proc
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor
              grpc_service:
                envoy_grpc:
                  cluster_name: usage_tracking_service
              # Configure processing mode to send both request and response headers
              processing_mode:
                request_header_mode: SEND
                response_header_mode: SEND
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: backend_service
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backend_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend
                port_value: 8000

  - name: rate_limiter_service
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: rate_limiter_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: rate_limiter
                port_value: 9001

  - name: usage_tracking_service
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: usage_tracking_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: usage_service
                port_value: 9002 